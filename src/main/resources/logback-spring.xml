<?xml version="1.0" encoding="UTF-8"?>

<configuration>

    <appender name="consoleLog"  class="ch.qos.logback.core.ConsoleAppender">
        <!--这里 consoleLog是配置的名字-->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger -%msg%n
            </pattern>
        </layout>
    </appender>

    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 注意这里的class和后面的不一样LevelFilter-->
            <!--过滤 匹配到error级别的拒绝DENY、 其他级别接受ACCEPT 这时候才打印 -->
            <!--还有一种是NEUTRAL 中立，什么都不干，看看是否符合下一条规则-->
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>
                "%d -- %msg%n"
            </pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        <!--路径  带有日期-->
            <fileNamePattern>E:\javaWorkspace\AllStudy\logs/sell.%d.log</fileNamePattern>
<!--            <fileNamePattern>/var/logs/asell.%d.log</fileNamePattern>-->
        </rollingPolicy>
    </appender>

<!--    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
<!--            &lt;!&ndash;过滤条件 只接受error级别的&ndash;&gt;-->
<!--            <level>ERROR</level>-->
<!--        </filter>-->
<!--        <encoder>-->
<!--            <pattern>-->
<!--                "%d &#45;&#45; %msg%n"-->
<!--            </pattern>-->
<!--        </encoder>-->
<!--        &lt;!&ndash;滚动策略&ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash;路径&ndash;&gt;-->
<!--            <fileNamePattern>E:\javaWorkspace\AllStudy\logs/error.%d.log</fileNamePattern>-->
<!--        </rollingPolicy>-->
<!--    </appender>-->

    <root level="info">
             <appender-ref ref="consoleLog"/>
<!--             <appender-ref ref="fileInfoLog"/>-->
<!--             <appender-ref ref="fileErrorLog"/>-->
    </root>
</configuration>
<!-- 从高到地低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!-- 日志输出规则  根据当前ROOT 级别，日志输出时，级别高于root默认的级别时  会输出 -->
<!-- 以下  每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志-->


<!-- 属性描述 scan：性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
    debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<!--<configuration scan="true" scanPeriod="60 seconds" debug="false">-->
<!--    &lt;!&ndash; 定义日志文件 输入位置 &ndash;&gt;-->
<!--    <property name="log_dir" value="E:\javaWorkspace\AllStudy\logs" />-->
<!--    &lt;!&ndash; 日志最大的历史 30天 &ndash;&gt;-->
<!--    <property name="maxHistory" value="30"/>-->




<!--    &lt;!&ndash; ConsoleAppender 控制台输出日志 &ndash;&gt;-->
<!--    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">-->
<!--        &lt;!&ndash; 对日志进行格式化 &ndash;&gt;-->
<!--        <encoder>-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger -%msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->


<!--    &lt;!&ndash; ERROR级别日志 &ndash;&gt;-->
<!--    &lt;!&ndash; 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 RollingFileAppender&ndash;&gt;-->
<!--    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 过滤器，只记录WARN级别的日志 &ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>ERROR</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--        &lt;!&ndash; 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash;日志输出位置  可相对、和绝对路径 &ndash;&gt;-->
<!--            <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/error-log.log</fileNamePattern>-->
<!--            &lt;!&ndash; 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6，-->
<!--            则只保存最近6个月的文件，删除之前的旧文件。注意，删除旧文件是，那些为了归档而创建的目录也会被删除&ndash;&gt;-->
<!--            <maxHistory>${maxHistory}</maxHistory>-->
<!--        </rollingPolicy>-->

<!--        &lt;!&ndash; 按照固定窗口模式生成日志文件，当文件大于20MB时，生成新的日志文件。窗口大小是1到3，当保存了3个归档文件后，将覆盖最早的日志。-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">-->
<!--          <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/.log.zip</fileNamePattern>-->
<!--          <minIndex>1</minIndex>-->
<!--          <maxIndex>3</maxIndex>-->
<!--        </rollingPolicy>   &ndash;&gt;-->
<!--        &lt;!&ndash; 查看当前活动文件的大小，如果超过指定大小会告知RollingFileAppender 触发当前活动文件滚动-->
<!--        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
<!--            <maxFileSize>5MB</maxFileSize>-->
<!--        </triggeringPolicy>   &ndash;&gt;-->

<!--        <encoder>-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->



<!--    &lt;!&ndash; WARN级别日志 appender &ndash;&gt;-->
<!--    <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 过滤器，只记录WARN级别的日志 &ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>WARN</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 按天回滚 daily &ndash;&gt;-->
<!--            <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/warn-log.log-->
<!--            </fileNamePattern>-->
<!--            &lt;!&ndash; 日志最大的历史 60天 &ndash;&gt;-->
<!--            <maxHistory>${maxHistory}</maxHistory>-->
<!--        </rollingPolicy>-->
<!--        <encoder>-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->




<!--    &lt;!&ndash; INFO级别日志 appender &ndash;&gt;-->
<!--    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 过滤器，只记录INFO级别的日志 &ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>INFO</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 按天回滚 daily &ndash;&gt;-->
<!--            <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/info-log.log-->
<!--            </fileNamePattern>-->
<!--            &lt;!&ndash; 日志最大的历史 60天 &ndash;&gt;-->
<!--            <maxHistory>${maxHistory}</maxHistory>-->
<!--        </rollingPolicy>-->
<!--        <encoder>-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->




<!--    &lt;!&ndash; DEBUG级别日志 appender &ndash;&gt;-->
<!--    <appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 过滤器，只记录DEBUG级别的日志 &ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>DEBUG</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 按天回滚 daily &ndash;&gt;-->
<!--            <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/debug-log.log-->
<!--            </fileNamePattern>-->
<!--            &lt;!&ndash; 日志最大的历史 60天 &ndash;&gt;-->
<!--            <maxHistory>${maxHistory}</maxHistory>-->
<!--        </rollingPolicy>-->
<!--        <encoder>-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->




<!--    &lt;!&ndash; TRACE级别日志 appender &ndash;&gt;-->
<!--    <appender name="TRACE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 过滤器，只记录ERROR级别的日志 &ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>TRACE</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 按天回滚 daily &ndash;&gt;-->
<!--            <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/trace-log.log-->
<!--            </fileNamePattern>-->
<!--            &lt;!&ndash; 日志最大的历史 60天 &ndash;&gt;-->
<!--            <maxHistory>${maxHistory}</maxHistory>-->
<!--        </rollingPolicy>-->
<!--        <encoder>-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--    &lt;!&ndash; 对一些包独立配置等级 &ndash;&gt;-->
<!--    <logger name="java.sql.PreparedStatement" value="DEBUG" />-->
<!--    <logger name="java.sql.Connection" value="DEBUG" />-->
<!--    <logger name="java.sql.Statement" value="DEBUG" />-->
<!--    <logger name="com.ibatis" value="DEBUG" />-->
<!--    <logger name="com.ibatis.common.jdbc.SimpleDataSource" value="DEBUG" />-->
<!--    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG"/>-->
<!--    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" value="DEBUG" />-->



<!--    &lt;!&ndash; root级别   DEBUG &ndash;&gt;-->
<!--    <root level="debug">-->
<!--        &lt;!&ndash; 控制台输出 &ndash;&gt;-->
<!--        <appender-ref ref="STDOUT" />-->
<!--        &lt;!&ndash; 文件输出 &ndash;&gt;-->
<!--        <appender-ref ref="ERROR" />-->
<!--        <appender-ref ref="INFO" />-->
<!--        <appender-ref ref="WARN" />-->
<!--        <appender-ref ref="DEBUG" />-->
<!--        <appender-ref ref="TRACE" />-->
<!--    </root>-->
<!--</configuration>-->
